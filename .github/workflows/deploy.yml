name: CI/CD

on:
  push:
    branches: [main]

jobs:
  build-test-deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm install
        working-directory: app

      - name: Run tests
        run: npm test
        working-directory: app

      - name: Build Docker image
        run: docker build -t node-health-check:latest .

      - name: Create Kind cluster
        uses: helm/kind-action@v1.5.0
        with:
          cluster_name: kind

      - name: Load Docker image into Kind
        run: kind load docker-image node-health-check:latest

      - name: Create namespace
        run: kubectl create namespace devops-challenge

      - name: Apply Kubernetes manifests
        run: |
          kubectl apply -f k8s/secret.yaml
          kubectl apply -f k8s/deployment.yaml
          kubectl apply -f k8s/service.yaml

      - name: Validate deployment
        run: |
          kubectl rollout status deployment/node-health-check -n devops-challenge
          POD=$(kubectl get pods -n devops-challenge -l app=node-health-check -o jsonpath="{.items[0].metadata.name}")
          echo "‚úÖ Ejecutando curl dentro del pod $POD"
          kubectl exec -n devops-challenge $POD -- curl http://localhost:3000/health || echo "‚ö†Ô∏è Fall√≥ el curl interno"

      - name: Debug failed rollout
        if: failure()
        run: |
          echo "‚ö†Ô∏è Describing pod..."
          kubectl get pods -n devops-challenge
          POD_NAME=$(kubectl get pods -n devops-challenge -l app=node-health-check -o jsonpath="{.items[0].metadata.name}")
          kubectl describe pod $POD_NAME -n devops-challenge
          echo "üì¶ Pod logs:"
          kubectl logs $POD_NAME -n devops-challenge
